{
	"info": {
		"_postman_id": "41d0ef15-0bcc-4781-a949-1995286027d9",
		"name": "Trendyol",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Status Code Control",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7fd7479f-6af2-499d-b5a2-b31e2aad3d89",
						"exec": [
							"pm.test(\"Status code is 200\", function (){",
							"",
							"if (pm.response.to.have.status(200)) {",
							"    tests[\"Status Code is 200\"] = responseCode.code ===200;",
							"    console.log(\"api is working\");",
							"}}),",
							"",
							"",
							"pm.test(\"Status code is 500\", function (){",
							"    ",
							"if (pm.response.to.have.status(500)) {",
							"    tests[\"Status Code is 500\"] = responseCode.code ===500;",
							"    console.log(\"api is not working\");",
							"}});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "/api/books/",
					"path": [
						"api",
						"books",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "No Title and Author",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5d814f24-15d6-4a7c-954a-2b447c1617a1",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"})",
							"",
							"",
							"tests[\"Status Code is 404\"] = responseCode.code ===404;",
							"",
							"pm.test(\"Status code has string\", () => {",
							"  pm.response.to.have.status(\"Field '<field_name>' is required.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[ {}]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "/api/books/",
					"path": [
						"api",
						"books",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Title and Author are Empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2804ebf5-b6e1-4dd0-acfd-957cb21d0a75",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"})",
							"",
							"",
							"tests[\"Status Code is 404\"] = responseCode.code ===404;",
							"",
							"pm.test(\"Status code has string\", () => {",
							"  pm.response.to.have.status(\"Field '<field_name>' cannot be empty.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[ {\"author\": \"\", \"title\": \"\"}]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "/api/books/",
					"path": [
						"api",
						"books",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Read Only Control For Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e2aa44b7-1ab6-4fa8-bae3-096e96d2257d",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"})",
							"",
							"",
							"tests[\"Status Code is 404\"] = responseCode.code ===404;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[ {\"id\": 10, \"author\": \"Tolstoy\", \"title\": \"Number 100\"}]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "/api/books/",
					"path": [
						"api",
						"books",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Response Control",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d122467a-6560-4d6b-b50a-9457e47583aa",
						"exec": [
							"pm.test(\"Author is John Smith, Title is SRE 101\"\", () => {",
							"  const responseJson = pm.response.json();",
							"  pm.expect(responseJson.author).to.eql(\"John Smith\");",
							"  pm.expect(responseJson.title).to.eql(\"SRE 101\"\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "/api/books/<book_1>/",
					"path": [
						"api",
						"books",
						"<book_1>",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Duplicate Book Control",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8e1efaff-3a24-43bb-aa5f-b016151636b7",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"})",
							"",
							"",
							"tests[\"Status Code is 404\"] = responseCode.code ===404;",
							"",
							"pm.test(\"Status code has string\", () => {",
							"  pm.response.to.have.status(\"Another book with similar title and author already exists.\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[ {\"author\": \"John Smith\", \"title\": \"SRE 101\"}]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "/api/books/",
					"path": [
						"api",
						"books",
						""
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}